@* Menu - The customer menu and order viewer. *@
@using PickUpOrder.Models
@{
    ViewBag.Title = "Menu";
    var db = new PickUpOrderDBEntities2();

    // This is temporary until the user DB is implemented.
    var mostRecentOrder = db.Orders.Find(1);
}

@* Print the header. *@
<h2>Welcome to the menu.</h2>

@* Display every item in the menu. *@
<table>
    @* Print the table header. *@
    <thread>
        <tr>
            <td>Name</td>
            <td>Price</td>
        </tr>
    </thread>
    @foreach (PickUpOrder.Models.MenuItem item in ViewBag.Menu)
    {
        @* Print the item information. *@
        <tr>
            <td>@item.Name</td>
            <td>$@((item.Price / 100.0).ToString("0.00"))</td>
            <td>@Html.ActionLink("Add to Order", "AddToOrder", "Menu", item, null)</td>
        </tr>
        <tr>
            <td>@item.Description</td>
        </tr>
    }
</table>

@* If there is an order associated with the user, display it. *@
@* Note: right now, it only ever checks row 1.*@
@if (mostRecentOrder != null && mostRecentOrder.ContentsToItemList() != null)
{
    <h2>Order details</h2>
    <h2>Contents: @mostRecentOrder.OrderContents</h2>
    <table>
        @foreach (PickUpOrder.Models.MenuItem item in mostRecentOrder.ContentsToItemList())
        {
            <tr>
                <td>@item.Name</td>
                <td>$@((item.Price / 100.0).ToString("0.00"))</td>
                <td>@Html.ActionLink("Remove", "RemoveFromOrder", "Menu", item, null)</td>
            </tr>
        }
    </table>
    <h2>Total cost: $@mostRecentOrder.CalcFinalCost()</h2>
}

@* Once users are implemented, provide the status of submitted orders here. *@