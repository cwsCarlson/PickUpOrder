@* OrderList - Prints the order list and allows their status to be changed. *@

@* Define objects utilized in the rest of the page. *@
@using PickUpOrder.Models
@{
    ViewBag.Title = "OrderList";
    var db = new PickUpOrderDBEntities2();
}

@* Print the heading. *@
<h2>Order List</h2>

@* Display every order in the database. *@
<table border=1 frame=void rules=rows>
    @* Print the table header. *@
    <thread>
        <tr>
            <td>Order #</td>
            <td>Contents</td>
            <td>Status</td>
        </tr>
    </thread>

    @* Get every model and print out those that should appear. *@
    @foreach (PickUpOrder.Models.Order order in db.Orders)
    {
        @* Orders that have not been submitted should not appear. *@
        if (order.OrderStatus != (int) OrderStatus.NotSubmitted)
        {
            var contents = order.ContentsToItemList();
            <tr>
                <td>@order.OrderID</td>
                <td>
                    @* Print all contents of the order. *@
                    @contents[0].Name
                    @for (int i = 1; i < contents.Count; i++)
                    {
                        <br>@contents[i].Name
                    }
                </td>
                @* Print the current order status and a button to update it. *@
                <td>@((OrderStatus) order.OrderStatus)</td>
                <td>
                    @Html.ActionLink("Update", "ChangeOrderStatus",
                                     "OrderList",
                                     new { toChange = order.OrderID }, null)
                </td>
            </tr>
        }
    }
</table>

@* Define the cell size. *@
<style type="text/css">
    td { width: 200px; }
</style>